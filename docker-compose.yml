services:
  # Laravel Backend API
  backend:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: university-cms-backend
    restart: unless-stopped
    volumes:
      - ./backend:/var/www/html:cached
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
    depends_on:
      - mysql
      - redis
    networks:
      - university-cms-network
    environment:
      - "DB_HOST=mysql"
      - "DB_DATABASE=${DB_DATABASE}"
      - "DB_USERNAME=${DB_USERNAME}"
      - "DB_PASSWORD=${DB_PASSWORD}"
      - "REDIS_HOST=redis"
      - "PHP_OPCACHE_VALIDATE_TIMESTAMPS=1"
      - "PHP_OPCACHE_ENABLE=1"
      - "PHP_OPCACHE_MEMORY_CONSUMPTION=256"
      - "PHP_OPCACHE_MAX_ACCELERATED_FILES=20000"
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G

  # Vue Frontend 
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: university-cms-frontend
    restart: unless-stopped
    volumes:
      - ./frontend:/app:cached
      - frontend-node-modules:/app/node_modules
    ports:
      - "${FRONTEND_PORT:-8080}:8080"
    networks:
      - university-cms-network
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
    environment:
      - "NODE_OPTIONS=--max-old-space-size=1024"

  # Nginx Web Server 
  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    container_name: university-cms-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
    volumes:
      - ./backend:/var/www/html
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - backend
      - frontend
    networks:
      - university-cms-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: university-cms-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
      SERVICE_NAME: mysql
    volumes:
      - mysql-data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    networks:
      - university-cms-network
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
    command: --default-authentication-plugin=mysql_native_password --innodb_buffer_pool_size=1G --innodb_log_file_size=256M --innodb_flush_log_at_trx_commit=2

  # Redis for Caching
  redis:
    image: redis:alpine
    container_name: university-cms-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - university-cms-network
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 384M

  # PhpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: university-cms-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
    ports:
      - "8081:80"
    depends_on:
      - mysql
    networks:
      - university-cms-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

networks:
  university-cms-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local
  redis-data:
    driver: local
  frontend-node-modules:
    driver: local
