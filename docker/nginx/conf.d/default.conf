# Default server configuration for development
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name localhost;

    # Root directory for static files
    root /var/www/html/public;
    index index.html index.php;

    # Performance optimizations
    client_max_body_size 64m;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    keepalive_timeout 65;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    # Gzip compression
    gzip on;
    gzip_comp_level 5;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_vary on;
    gzip_types
        application/javascript
        application/json
        application/x-javascript
        application/xml
        application/xml+rss
        text/css
        text/javascript
        text/plain
        text/xml;

    # Development mode placeholder page if Laravel isn't installed yet
    location = / {
        if (!-e $request_filename) {
            # If no index file exists, show a placeholder
            return 200 "University CMS - Development Environment\nNginx is running correctly.\n\nBackend URL: http://localhost/api\nFrontend URL: http://localhost:8080\n";
        }
    }

    # Cache static files
    location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    # API Routes
    location /api {
        # First attempt to serve request as file, then as directory, then fall back to index.php
        try_files $uri $uri/ /index.php?$query_string;

        # Handle case when backend is not ready
        error_page 502 504 = @backend_unavailable;
        
        # Increase timeouts for API requests
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        fastcgi_connect_timeout 300s;
        fastcgi_send_timeout 300s;
        fastcgi_read_timeout 300s;
    }

    # Fallback for unavailable backend
    location @backend_unavailable {
        return 503 "Backend service is starting up or unavailable.\nPlease wait a moment and refresh.";
    }

    # Laravel Backend PHP Processing
    location ~ \.php$ {
        # Handle case when PHP file doesn't exist
        if (!-f $request_filename) {
            return 404;
        }

        # PHP-FPM configuration
        fastcgi_pass backend:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
        
        # Performance optimizations
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        fastcgi_connect_timeout 300s;
        fastcgi_send_timeout 300s;
        fastcgi_read_timeout 300s;
        
        # Handle PHP service unavailability
        fastcgi_intercept_errors on;
        error_page 502 504 = @backend_unavailable;
    }

    # Frontend Static Assets (direct access)
    location / {
        # First try local files, then proxy to frontend dev server
        try_files $uri @frontend;
    }

    # Proxy to frontend dev server
    location @frontend {
        proxy_pass http://frontend:8080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        
        # Performance optimizations
        proxy_buffers 16 16k;
        proxy_buffer_size 32k;
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Handle frontend service unavailability
        proxy_intercept_errors on;
        error_page 502 504 = @frontend_unavailable;
    }

    # Fallback for unavailable frontend
    location @frontend_unavailable {
        return 503 "Frontend service is starting up or unavailable.\nPlease wait a moment and refresh.";
    }

    # Common error handling
    error_page 404 /404.html;
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}
